{"version":3,"sources":["global.js","containers/TeamPokemonCard.js","containers/BallInventory.js","containers/Main.js","containers/NotFound.js","containers/Auth.js","containers/Login.js","containers/Team.js","containers/DexSpecificPokemonCard.js","containers/Form.js","containers/Dex.js","containers/Inventory.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["apiBaseURL","typeColorMap","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","rarityColorMap","common","uncommon","rare","super_rare","ultra_rare","legendary","sendGetRequestWithAuthHeader","url","a","authToken","localStorage","getItem","fetch","headers","TeamSpecificPokemonCard","props","renderAllMoves","allMoves","state","moves","map","renderOneMove","style","moveInfo","categoryColor","key","name","type","category","power","acc","this","moveName","getMove","fullMove","push","setState","console","log","teamPath","response","status","json","className","src","pokemonName","alt","nickName","level","nature","IV","hp","atk","def","spa","spd","spe","stats","React","Component","BallInventory","balls","inventory","allBallsInfo","Object","keys","ballName","getBallInfo","ballInfo","remaining","imageName","itemPath","ball","selectSpecificBall","selected","Item","renderItemCard","border","onClick","itemName","desc","MainPage","encounter","errorMessage","clearErrorMsg","data","caughtPokemon","isEncountering","rarity","isCaught","encountering","isAlreadyCaughtBefore","runaway","text","catch","catchPath","pokeball","pokemon","alert","changeBall","isSelectingBall","dex","render","searchResults","names","one","images","savedPokemon","Map","caught","caughtMon","NotFound","Auth","email","password","passwordconf","username","firstname","lastname","event","preventDefault","value","target","user","userName","onChange","handleChange","handleSignIn","handleSignUp","handleSignOut","Login","bind","handleError","removeError","values","passwordConf","firstName","lastName","JSON","stringify","method","body","then","setAuthHeader","parseAsJSON","newUser","setItem","get","err","obj","request","Authorization","ok","clear","Team","pokemons","team","_id","getTeam","TeamGeneralPokemonCard","toggleSpecificRender","general","DexSpecificPokemonCard","abilities","colors","types","forEach","toLowerCase","dexNumber","renderTypes","renderAbilities","height","weight","eggGroups","baseStats","StatBar","background","Form","onSubmit","e","inputValue","placeholder","placeholderText","id","Dex","current","filter","filtered","filterAutoComplete","startsWith","filterByDexNumberAutoComplete","toString","reset","searchMonInDex","parseInt","isNaN","monInDex","getPokemonInDex","pokemonInfo","pokemonPath","length","DexGeneralPokemonCard","Inventory","Routes","exact","path","Main","App","useState","isAuthenticated","userHasAuthenticated","Navbar","fluid","collapseOnSelect","Header","Brand","to","Toggle","Collapse","Nav","pullRight","NavItem","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9ac0bcbb.chunk.js","sourcesContent":["export const apiBaseURL = \"https://api.npham24.me\";\n\nexport const typeColorMap = {\n    normal: \"#A8A878\",\n    fighting: \"#C03028\",\n    flying: \"#A890F0\",\n    poison: \"#A040A0\",\n    ground: \"#E0C068\",\n    rock: \"#B8A038\",\n    bug: \"#A8B820\",\n    ghost: \"#705898\",\n    steel: \"#B8B8D0\",\n    fire: \"#F08030\",\n    water: \"#6890F0\",\n    grass: \"#78C850\",\n    electric: \"#F8D030\",\n    psychic: \"#F85888\",\n    ice: \"#98D8D8\",\n    dragon: \"#7038F8\",\n    dark: \"#705848\",\n    fairy: \"#EE99AC\",\n}\n\nexport const rarityColorMap = {\n    common: \"#D99454\",\n    uncommon: \"#296EDF\",\n    rare: \"#2EE75A\",\n    super_rare: \"#B846EA\",\n    ultra_rare: \"#EE5252\",\n    legendary: \"#F9F52D\",\n}\n\nexport const sendGetRequestWithAuthHeader = async(url) => {\n    const authToken = localStorage.getItem(\"authHeader\");\n    return await fetch(url, {\n        headers: {\n            \"Authorization\": authToken\n        }\n    })\n}","import React from \"react\";\nimport { apiBaseURL } from \"../global\";\nimport { sendGetRequestWithAuthHeader, typeColorMap } from \"../global\";\n\nclass TeamSpecificPokemonCard extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            moves: []\n        }\n    }\n\n    async componentDidMount() {\n        let moves = [];\n        for (const moveName of this.props.moves) {\n            const fullMove = await this.getMove(moveName);\n            if (fullMove) {\n                moves.push(fullMove);\n            }\n        }\n        this.setState({\n            moves: moves\n        })\n        console.log(moves)\n    }\n\n    async getMove(moveName) {\n        const teamPath = \"/v1/moves/\" + moveName;\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + teamPath);\n        if (response.status === 200) {\n            return response.json();\n        }\n    }\n\n    renderAllMoves = () => {\n        const allMoves = this.state.moves.map(this.renderOneMove);\n        return(\n            <table style={{\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\"\n            }}>\n                <thead>\n                    <tr>\n                        <th style={{\"padding\": 5+\"px\"}}>Move</th>\n                        <th style={{\"padding\": 5+\"px\"}}>Type</th>\n                        <th style={{\"padding\": 5+\"px\"}}>Category</th>\n                        <th style={{\"padding\": 5+\"px\"}}>Power</th>\n                        <th style={{\"padding\": 5+\"px\"}}>Accuracy</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {allMoves}\n                </tbody>\n            </table>\n        )\n    }\n\n    renderOneMove = (moveInfo) => {\n        const categoryColor = moveInfo === \"physical\" ? \"#C92112\" : \"#4F5870\"\n        return(\n            <tr key={moveInfo.name} >\n                <td style={{\n                    \"padding\": 5+\"px\"\n                }}>{moveInfo.name}</td>\n                <td style = {{\n                    \"backgroundColor\": typeColorMap[moveInfo.type],\n                    \"color\": \"white\",\n                    \"padding\": 5+\"px\"\n                }}>{moveInfo.type}</td>\n                <td style ={{\n                    \"backgroundColor\": categoryColor,\n                    \"color\": \"white\",\n                    \"padding\": 5+\"px\"\n                }}>{moveInfo.category}</td>\n                <td style={{\n                    \"padding\": 5+\"px\"\n                }}>{moveInfo.power}</td>\n                <td style={{\n                    \"padding\": 5+\"px\"\n                }}>{moveInfo.acc}</td>\n            </tr>\n        )\n    }\n\n\n    render() {\n        return(\n            <div className=\"card\" style={{\"width\": 400 + \"px\"}}> \n                <img src={apiBaseURL + \"/v1/pokedex/image/\" + this.props.pokemonName} alt={this.props.pokemonName + \" image\"} />\n                <h3>{this.props.nickName}</h3>\n                <h4>{\"Species: \" + this.props.pokemonName}</h4>\n                <h4>{\"level: \" + this.props.level}</h4>\n                <p>{\"nature: \" + this.props.nature}</p>\n\n                <br/>\n                <p>IV:</p>\n                <p>{\"HP: \" + this.props.IV.hp}</p>\n                <p>{\"ATK: \" + this.props.IV.atk}</p>\n                <p>{\"DEF: \" + this.props.IV.def}</p>\n                <p>{\"SPA: \" + this.props.IV.spa}</p>\n                <p>{\"SPD: \" + this.props.IV.spd}</p>\n                <p>{\"SPE: \" + this.props.IV.spe}</p>\n\n                <br/>\n                <p>Stats:</p>\n                <p>{\"HP: \" + this.props.stats.hp}</p>\n                <p>{\"ATK: \" + this.props.stats.atk}</p>\n                <p>{\"DEF: \" + this.props.stats.def}</p>\n                <p>{\"SPA: \" + this.props.stats.spa}</p>\n                <p>{\"SPD: \" + this.props.stats.spd}</p>\n                <p>{\"SPE: \" + this.props.stats.spe}</p>\n                <br/>\n\n                <p>Moves:</p>\n                {this.renderAllMoves()}\n            </div>\n        );\n    }\n}\n\nexport default TeamSpecificPokemonCard;","import { apiBaseURL } from '../global';\nimport React from 'react';\nimport { sendGetRequestWithAuthHeader } from \"../global\";\n\nclass BallInventory extends React.Component {\n    state = {\n        balls: []\n    }\n\n    async componentDidMount() {\n        const inventoryPath = \"/v1/inventory\";\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + inventoryPath);\n        const inventory = await response.json();\n\n        let allBallsInfo = [];\n        for (const ballName of Object.keys(inventory.balls)) {\n            let ballInfo = await this.getBallInfo(ballName);\n            ballInfo.remaining = inventory.balls[ballName];\n            ballInfo.imageName = ballName;\n\n            if (ballInfo) {\n                allBallsInfo.push(ballInfo);\n            }\n        }\n\n        this.setState({\n            balls: allBallsInfo\n        });\n    }\n\n    async getBallInfo(ballName) {\n        const itemPath = \"/v1/items/balls/\" + ballName;\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + itemPath);\n        return await response.json();\n    }\n\n    render() {\n        return(\n            <div style={{\"display\": \"flex\", \"flexWrap\": \"wrap\"}}>\n                {this.state.balls.map((ball => \n                    <Item selectSpecificBall={this.props.selectSpecificBall} \n                          selected ={this.props.selected}\n                          key={ball.imageName} \n                          {...ball} />))}\n            </div>\n        );\n    }\n}\n\nclass Item extends React.Component {\n    renderItemCard = () => {\n\n        const selected = this.props.selected === this.props.imageName;\n        const border = selected ? \"2px solid black\": \"\";\n        return(\n            <div className=\"card\" \n            onClick={() => {\n                this.props.selectSpecificBall(this.props.imageName)\n            }}\n            style={{\n                \"padding\": 5 +\"px\",\n                \"width\": 250 + \"px\",\n                \"border\": border\n            }}>\n                <img style = {{\"width\": 150+ \"px\", \"height\": 150 + \"px\"}} \n                     src={apiBaseURL + \"/v1/items/image/\" + this.props.imageName} \n                     alt={this.props.itemName + \" image\"} />\n                <h4>{this.props.itemName}</h4>\n                <p>{this.props.desc}</p>\n                <h4>{\"Remaining: \" + this.props.remaining}</h4>\n            </div>\n        );\n    }\n\n\n    render() {\n        return(\n            this.renderItemCard()\n        );\n    }\n}\n \nexport default BallInventory;","import React from 'react'\n\nimport { apiBaseURL, rarityColorMap } from '../global'\nimport TeamSpecificPokemonCard from \"./TeamPokemonCard\";\nimport BallInventory from \"./BallInventory\";\nimport { sendGetRequestWithAuthHeader } from \"../global\";\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            searchResults: [],\n            names: [],\n            one: '', // one is just a test variable\n            images: [],\n            pokemon: [],\n            savedPokemon: new Map(),\n            encountering: {\n              isEncountering: false,\n              pokemonName: \"\",\n              rarity: \"\",\n            },\n            isAlreadyCaughtBefore: false,\n            caught: false,\n            caughtPokemon: null,\n            pokeball: \"pokeball\",\n            isSelectingBall: false,\n            errorMessage: \"\",\n        }\n    }\n\n    async componentDidMount() {\n      try {\n        const dexPath = '/v1/pokedex';\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + dexPath);\n        if (response.status === 401) {\n          this.setState({\n            errorMessage: \"Please log in.\"\n          })\n        } else {\n          this.clearErrorMsg();\n          const dex = await response.json();\n  \n          let caughtMon = []\n          for (const pokemonName of Object.keys(dex)) {\n              const caught = dex[pokemonName]\n              if (caught) {\n                  caughtMon.push(pokemonName)\n              }\n              this.setState({ caughtMon: caughtMon })\n          }\n        }\n      } catch(e) {\n        console.log(e);\n      }\n    }\n\n    encounter = async () => {\n      const encounterPath = \"/v1/encounter\";\n      const response = await sendGetRequestWithAuthHeader(apiBaseURL + encounterPath);\n      if (response.status === 401) {\n        this.setState({\n          errorMessage: \"Please log in.\"\n        })\n      } else {\n        this.clearErrorMsg();\n        const data = await response.json();\n\n        if (this.state.caughtPokemon) {\n          this.setState({\n            caughtPokemon: null\n          });\n        }\n  \n        this.setState({encountering: {\n          isEncountering: true,\n          pokemonName: data.pokemonName,\n          rarity: data.rarity,\n        }, isAlreadyCaughtBefore: await this.isCaught(data.pokemonName)})\n      }\n\n    }\n\n    runaway = async () => {\n      const runawayPath = \"/v1/runaway\";\n      const response = await sendGetRequestWithAuthHeader(apiBaseURL + runawayPath);\n\n      const data = await response.text();\n      \n\n      this.setState({encountering: {\n        isEncountering: false\n      }})\n    }\n\n    catch = async () => {\n      const catchPath = \"/v1/catch/\" + this.state.encountering.pokemonName + \"?ball=\" + this.state.pokeball;\n      const response = await sendGetRequestWithAuthHeader(apiBaseURL + catchPath);\n\n      const data = await response.json();\n\n      if (data.status === \"success\") {\n        this.setState({\n          encountering: {\n            isEncountering: false\n          },\n          caughtPokemon: data.pokemon\n        });\n      } else {\n        alert(\"Catch failed!\");\n      }\n    }\n\n    changeBall = async () => {\n      const inventoryPath = \"/v1/inventory\";\n      const response = await sendGetRequestWithAuthHeader(apiBaseURL + inventoryPath);\n\n      const inventory = await response.json();\n      this.setState({\n        isSelectingBall: true\n      });\n    }\n\n    selectSpecificBall = (ballName) => {\n      this.setState({\n        pokeball: ballName\n      })\n    }\n\n    isCaught = async (pokemonName) => {\n      const dexPath = '/v1/pokedex';\n      const response = await sendGetRequestWithAuthHeader(apiBaseURL + dexPath);\n\n      const dex = await response.json();\n      return dex[pokemonName];\n    }\n\n    clearErrorMsg = () => {\n      this.setState({\n        errorMessage: \"\"\n      })\n    }\n\n    render = () => {\n        return (\n          <div>\n            {this.state.errorMessage && (\n              <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n            )}\n\n            {!this.state.isSelectingBall ? (\n              <div>\n                {!this.state.encountering.isEncountering ? (\n                  <button onClick={this.encounter}>\n                    Encounter\n                  </button>\n                ) : (\n                  <div>\n                    <button onClick={this.catch}>\n                      Catch\n                    </button>\n                    <button onClick={this.runaway}>  \n                      Run Away\n                    </button>\n                    <br/>\n                    <br/>\n                    <div style={{\"display\": \"flex\", \"justifyContent\": \"center\"}}>\n                      <h3>{\"Using ball: \"}</h3>\n                      <img  style = {{\"width\": 50+ \"px\", \"height\": 50 + \"px\"}} \n                            src={apiBaseURL + \"/v1/items/image/\" + this.state.pokeball} \n                            alt={this.state.pokeball + \" image\"} />\n                      <button \n                        style={{\"marginLeft\": 10 + \"px\"}}\n                        onClick={this.changeBall}>Change ball</button>\n                    </div>\n                    <h2>Encountering:</h2>\n                    <div className=\"card\" style={{\n                    \"width\": 400+ \"px\", \n                    \"border\": 2 + \"px solid\",\n                    \"borderColor\": rarityColorMap[this.state.encountering.rarity],\n                    \"paddingTop\": 10 + \"px\",\n                    \"paddingBottom\": 5 + \"px\"\n                    }}>\n                      <img src={apiBaseURL + \"/v1/pokedex/image/\" + this.state.encountering.pokemonName} alt={this.props.name + \" image\"} />\n                      <h3>{this.state.encountering.pokemonName}</h3>\n                      <h4>\n                        <span>Rarity: </span>\n                        <span style={{\"color\": rarityColorMap[this.state.encountering.rarity]}}>{this.state.encountering.rarity}</span>\n                      </h4>\n                      {this.state.isAlreadyCaughtBefore ? (\n                        <h4 style={{\"color\": \"green\"}}>Already Caught</h4>\n                      ) : (\n                        <div></div>\n                      )\n                      }\n                    </div>\n                  </div>\n                )}\n                {this.state.caughtPokemon && \n                  <div>\n                    <h2>{\"Yes! \" + this.state.caughtPokemon.pokemonName + \" was caught!\"}</h2>\n                    <TeamSpecificPokemonCard {...this.state.caughtPokemon}/>\n                  </div>\n                }\n              </div>\n            ) : (\n              <div>\n                <BallInventory selectSpecificBall={this.selectSpecificBall} selected={this.state.pokeball}/>\n                <button onClick={() => {\n                  this.setState({\n                    isSelectingBall: false\n                  })\n                }}>Back</button>\n              </div>\n            )} \n          </div>\n          \n        )\n    }\n}\n\nexport default MainPage\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>An error has occured - page not found. </h3>\n    </div>\n  );\n}\n\n","import React, { Component } from \"react\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordconf: \"\",\n      username: \"\",\n      firstname: \"\",\n      lastname: \"\"\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let value = event.target.value;\n    if (event.target.name === \"email\") {\n      this.setState({ email: value });\n    } else if (event.target.name === \"password\") {\n      this.setState({ password: value });\n    } else if (event.target.name === \"username\") {\n      this.setState({ username: value });\n    } else if (event.target.name === \"firstname\") {\n      this.setState({ firstname: value });\n    } else if (event.target.name === \"lastname\") {\n      this.setState({ lastname: value });\n    } else if (event.target.name === \"passwordconf\") {\n      this.setState({ passwordconf: value });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.props.errorMessage && (\n          <p className=\"alert alert-danger\">{this.props.errorMessage}</p>\n        )}\n\n        {this.props.user && (\n          <div className=\"alert alert-success\">\n            <h1>Logged in as {this.props.user.userName}</h1>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            className=\"form-control\"\n            name=\"email\"\n            value={this.props.email}\n            onChange={event => {\n              this.handleChange(event);\n            }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            value={this.props.password}\n            onChange={event => {\n              this.handleChange(event);\n            }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <button\n            className=\"btn btn-success mr-2\"\n            onClick={() => {\n              this.props.handleSignIn(this.state.email, this.state.password);\n            }}\n          >\n            Sign In\n          </button>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Confirm Password:</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"passwordconf\"\n            value={this.props.passwordconf}\n            onChange={event => {\n              this.handleChange(event);\n            }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Username:</label>\n          <input\n            className=\"form-control\"\n            name=\"username\"\n            value={this.props.username}\n            onChange={event => {\n              this.handleChange(event);\n            }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Firstname:</label>\n          <input\n            className=\"form-control\"\n            name=\"firstname\"\n            value={this.props.firstname}\n            onChange={event => {\n              this.handleChange(event);\n            }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>lastname:</label>\n          <input\n            className=\"form-control\"\n            name=\"lastname\"\n            value={this.props.lastname}\n            onChange={event => {\n              this.handleChange(event);\n            }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <button\n            className=\"btn btn-primary mr-2\"\n            onClick={() => {\n              this.props.handleSignUp(\n                this.state.email,\n                this.state.password,\n                this.state.passwordconf,\n                this.state.username,\n                this.state.firstname,\n                this.state.lastname\n              );\n            }}\n          >\n            Sign Up\n          </button>\n        </div>\n        <button\n            className=\"btn btn-danger mr-2\"\n            onClick={\n                this.props.handleSignOut\n            }>\n            Sign Out\n          </button>\n      </div>\n    );\n  }\n}\n\nexport default Auth;","import React, { Component } from \"react\";\nimport Auth from \"./Auth\";\nimport {apiBaseURL} from \"../global\"\n//import Error from \"./NotFound\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      errorMessage: \"\"\n    };\n\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  // Add a handleSignUp() method\n  handleSignUp(email, password, passwordconf, username, firstname, lastname) {\n    this.removeError();\n    let values = {\n      email: email,\n      password: password,\n      passwordConf: passwordconf,\n      userName: username,\n      firstName: firstname,\n      lastName: lastname\n    };\n\n    let json = JSON.stringify(values);\n    let dataURL = apiBaseURL + \"/v1/users\";\n    let request = {\n      method: \"POST\",\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(dataURL, request)\n      .then(this.setAuthHeader)\n      .then(this.parseAsJSON)\n      .then(newUser => this.setState({ user: newUser }))\n      .catch(this.handleError);\n  }\n\n  setAuthHeader(response) {\n    localStorage.setItem(\"authHeader\", response.headers.get(\"Authorization\"));\n    return response;\n  }\n\n  parseAsJSON(response) {\n    if (response.status < 300) {\n      return response.json();\n    }\n    return response.text().then(err => {\n      throw err;\n    });\n  }\n\n  handleError(err) {\n    this.setState({ errorMessage: err });\n  }\n\n  removeError() {\n    this.setState({ errorMessage: null });\n  }\n\n  handleSignIn(email, password) {\n    this.removeError();\n    let obj = {\n      email: email,\n      password: password\n    };\n\n    let json = JSON.stringify(obj);\n    let dataURL = apiBaseURL + \"/v1/sessions\";\n    let request = {\n      method: \"POST\",\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(dataURL, request)\n      .then(this.setAuthHeader)\n      .then(this.parseAsJSON)\n      .then(user => this.setState({ user: user }))\n      .catch(this.handleError);\n  }\n\n  handleSignOut() {\n    this.removeError();\n    let dataURL = apiBaseURL + \"/v1/sessions/mine\";\n    let request = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: localStorage.getItem(\"authHeader\")\n      }\n    };\n\n    fetch(dataURL, request)\n      .then(response => {\n        console.log(response.status);\n        if (response.ok) {\n          return response;\n        }\n        return response.text().then(err => {\n          throw err;\n        });\n      })\n      .then(response => {\n        localStorage.clear();\n        this.setState({ user: null });\n        alert(\"Signed out successfully\");\n        return response;\n      })\n      .catch(this.handleError);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n          <Auth\n            errorMessage={this.state.errorMessage}\n            user={this.state.user}\n            handleSignUp={this.handleSignUp}\n            handleSignIn={this.handleSignIn}\n            handleSignOut={this.handleSignOut}\n          />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\n\n\n\n","import { apiBaseURL } from '../global';\nimport React from 'react';\nimport TeamSpecificPokemonCard from \"./TeamPokemonCard\";\nimport { sendGetRequestWithAuthHeader } from \"../global\";\n\nclass Team extends React.Component {\n    state = {\n        pokemons: [],\n        errorMessage: \"\"\n    };\n\n    async componentDidMount() {\n        const teamPath = \"/v1/team\";\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + teamPath);\n        if (response.status == 401) {\n            this.setState({\n              errorMessage: \"Please log in.\"\n            })\n            return;\n        }\n\n        const team = await response.json();\n\n        this.setState({\n            pokemons: team\n        })\n    }\n\n    getTeam() {\n        return this.state.pokemons.map((pokemon => <TeamGeneralPokemonCard key={pokemon._id} {...pokemon} />));\n    }\n\n    render() {\n        return(\n            <div>\n                {this.state.errorMessage && (\n                    <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n                )}\n                <div style={{\"display\": \"flex\", \"flexWrap\": \"wrap\"}}>\n                    {this.getTeam()}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nclass TeamGeneralPokemonCard extends React.Component {\n    constructor (props) {\n        super(props)\n        \n        this.state = {\n            general: true\n        }\n    }\n\n    toggleSpecificRender = () => {\n        this.setState({general: !this.state.general})\n    }\n\n    render() {\n        return(\n            this.state.general ? (\n                <div className=\"card\" style={{\"width\": 400 + \"px\"}} onClick={this.toggleSpecificRender}> \n                    <img src={apiBaseURL + \"/v1/pokedex/image/\" + this.props.pokemonName} alt={this.props.pokemonName + \" image\"} />\n                    <h3>{this.props.nickName}</h3>\n                    <h4>{\"level: \" + this.props.level}</h4>\n                    <br/>\n                </div>\n            ):(\n                <div onClick={this.toggleSpecificRender}>\n                    <TeamSpecificPokemonCard key ={this.props._id} {...this.props}/>            \n                </div>\n            )\n\n        );\n    }\n}\n\nexport default Team;","import React from \"react\";\nimport { apiBaseURL, typeColorMap } from \"../global\";\n\n\nclass DexSpecificPokemonCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \n        }\n    }\n\n    renderAbilities() {\n        return(\n            <div>\n                <p>{\"0: \" + this.props.abilities[\"0\"]}</p>\n                {this.props.abilities[\"1\"] ? <p>{\"1: \" + this.props.abilities[\"1\"]}</p> : <p></p>}\n                <p>{\"H: \" + this.props.abilities[\"H\"]}</p>\n            </div>\n        )\n    }\n\n    renderTypes() {\n        let colors = [];\n        this.props.types.forEach(type => {\n            colors.push(\n                <div key={type}\n                    style={{\n                    \"backgroundColor\": typeColorMap[type.toLowerCase()],\n                    \"padding\": 5 + \"px\",\n                    \"border\": \"1px solid #9C531F\",\n                    \"borderRadius\": \"3px\",\n                    \"color\": \"#FFFFFF\",\n                    \"width\": 70+ \"px\"\n                    }}>\n                    {type}\n                </div>\n            )\n        });\n        return(\n            <div style={{\"display\": \"flex\", \"justifyContent\": \"center\"}}>\n                {colors}\n            </div>\n        );\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"card\" style={{\"padding\": 10+ \"px\"}}>\n\n                    <img src={apiBaseURL + \"/v1/pokedex/image/\" + this.props.imageName} alt={this.props.name + \" image\"} />\n                    <h3>{this.props.name}</h3>\n                    <h4>{\"Dex no. \" + this.props.dexNumber}</h4>\n                    <p>{\"Desc: \" + this.props.desc}</p>\n                    <p>{\"Type: \"}</p>\n                    {this.renderTypes()}\n                    <br/>\n                    <p>{\"Abilities:\"}</p>\n                    {this.renderAbilities()}\n                    <br/>\n                    <p>{\"Height: \" + this.props.height + \"m\"}</p>\n                    <p>{\"Weight: \" + this.props.weight + \"kg\"}</p>\n                    <p>{\"Egg group: \" + this.props.eggGroups}</p>\n                    <br/>\n                    <StatBar baseStats={this.props.baseStats}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass StatBar extends React.Component {\n    render() {\n        return(                \n            <table style= {{\"marginLeft\": \"auto\", \"marginRight\": \"auto\"}}>\n                <tbody>\n                    <tr style={{background: \"#9DB7F5\"}}>\n                        <th style={{\"textAlign\": \"center\"}}>Stat</th>\n                    </tr>\n\n                    {/* HP */}\n                    <tr style={{background: \"#FF5959\", \n                                \"textAlign\": \"center\"}}>\n                        <th style={{\"width\": 85 + \"px\",\n                                    \"paddingLeft\": 0.5 + \"em\",\n                                    \"paddingRight\":0.5 +\"em\"}}>\n                            <div style={{\"float\":\"left\"}}>\n                                <span style={{\"color\":\"#000\"}}>HP:</span>\n                            </div>\n                            <div style={{\"float\":\"right\"}}>{this.props.baseStats.hp}</div>\n                        </th>\n                        <td style={{\"width\": 255 + \"px\"}}>\n                            <div style={{\"backgroundColor\": \"#FF0000\",\n                                        \"border\": 1 +\"px solid #A60000\",\n                                        \"width\": \"calc(100% * \" + this.props.baseStats.hp + \" /255)\",\n                                        \"height\":20 +\"px\"}}></div>\n                        </td>\n                    </tr>\n\n                    {/* ATK */}\n                    <tr style={{background: \"#F5AC78\", \n                                \"textAlign\": \"center\"}}>\n                        <th style={{\"width\": 85 + \"px\",\n                                    \"paddingLeft\": 0.5 + \"em\",\n                                    \"paddingRight\":0.5 +\"em\"}}>\n                            <div style={{\"float\":\"left\"}}>\n                                <span style={{\"color\":\"#000\"}}>ATK:</span>\n                            </div>\n                            <div style={{\"float\":\"right\"}}>{this.props.baseStats.atk}</div>\n                        </th>\n                        <td style={{\"width\": 255 + \"px\"}}>\n                            <div style={{\"backgroundColor\": \"#F08030\",\n                                        \"border\": 1 +\"px solid #9C531F\",\n                                        \"width\": \"calc(100% * \" + this.props.baseStats.atk + \" /255)\",\n                                        \"height\":20 +\"px\"}}></div>\n                        </td>\n                    </tr>\n\n                    {/* DEF */}\n                    <tr style={{background: \"#FAE078\", \n                                \"textAlign\": \"center\"}}>\n                        <th style={{\"width\": 85 + \"px\",\n                                    \"paddingLeft\": 0.5 + \"em\",\n                                    \"paddingRight\":0.5 +\"em\"}}>\n                            <div style={{\"float\":\"left\"}}>\n                                <span style={{\"color\":\"#000\"}}>DEF:</span>\n                            </div>\n                            <div style={{\"float\":\"right\"}}>{this.props.baseStats.def}</div>\n                        </th>\n                        <td style={{\"width\": 255 + \"px\"}}>\n                            <div style={{\"backgroundColor\": \"#F8D030\",\n                                        \"border\": 1 +\"px solid #A1871F\",\n                                        \"width\": \"calc(100% * \" + this.props.baseStats.def + \" /255)\",\n                                        \"height\":20 +\"px\"}}></div>\n                        </td>\n                    </tr>\n\n                    {/* SPA */}\n                    <tr style={{background: \"#9DB7F5\", \n                                \"textAlign\": \"center\"}}>\n                        <th style={{\"width\": 85 + \"px\",\n                                    \"paddingLeft\": 0.5 + \"em\",\n                                    \"paddingRight\":0.5 +\"em\"}}>\n                            <div style={{\"float\":\"left\"}}>\n                                <span style={{\"color\":\"#000\"}}>SPA:</span>\n                            </div>\n                            <div style={{\"float\":\"right\"}}>{this.props.baseStats.spa}</div>\n                        </th>\n                        <td style={{\"width\": 255 + \"px\"}}>\n                            <div style={{\"backgroundColor\": \"#6890F0\",\n                                        \"border\": 1 +\"px solid #445E9C\",\n                                        \"width\": \"calc(100% * \" + this.props.baseStats.spa + \" /255)\",\n                                        \"height\":20 +\"px\"}}></div>\n                        </td>\n                    </tr>         \n\n                    {/* SPD */}\n                    <tr style={{background: \"#A7DB8D\", \n                                \"textAlign\": \"center\"}}>\n                        <th style={{\"width\": 85 + \"px\",\n                                    \"paddingLeft\": 0.5 + \"em\",\n                                    \"paddingRight\":0.5 +\"em\"}}>\n                            <div style={{\"float\":\"left\"}}>\n                                <span style={{\"color\":\"#000\"}}>SPD:</span>\n                            </div>\n                            <div style={{\"float\":\"right\"}}>{this.props.baseStats.spd}</div>\n                        </th>\n                        <td style={{\"width\": 255 + \"px\"}}>\n                            <div style={{\"backgroundColor\": \"#78C850\",\n                                        \"border\": 1 +\"px solid #4E8234\",\n                                        \"width\": \"calc(100% * \" + this.props.baseStats.spd + \" /255)\",\n                                        \"height\":20 +\"px\"}}></div>\n                        </td>\n                    </tr>\n\n                    {/* SPE */}\n                    <tr style={{background: \"#FA92B2\", \n                                \"textAlign\": \"center\"}}>\n                        <th style={{\"width\": 85 + \"px\",\n                                    \"paddingLeft\": 0.5 + \"em\",\n                                    \"paddingRight\":0.5 +\"em\"}}>\n                            <div style={{\"float\":\"left\"}}>\n                                <span style={{\"color\":\"#000\"}}>SPE:</span>\n                            </div>\n                            <div style={{\"float\":\"right\"}}>{this.props.baseStats.spe}</div>\n                        </th>\n                        <td style={{\"width\": 255 + \"px\"}}>\n                            <div style={{\"backgroundColor\": \"#F85888\",\n                                        \"border\": 1 +\"px solid #A13959\",\n                                        \"width\": \"calc(100% * \" + this.props.baseStats.spe + \" /255)\",\n                                        \"height\":20 +\"px\"}}></div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default DexSpecificPokemonCard;","import React from 'react'\n\nclass Form extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      inputValue: ''\n    }\n  }\n\n    render = () => {\n      return (\n        <div className=\"input_form\">\n          <form\n\n            onSubmit={(e) => {\n              e.preventDefault()\n\n              this.props.onSubmit(this.state.inputValue)\n            }}\n          >\n\n            <input\n              className=\"input_text\"\n              type=\"text\"\n              placeholder={this.props.placeholderText}\n              onChange={(e) => {\n                var value = e.target.value\n\n                this.setState({\n                  inputValue: value\n                })\n              }}\n            />\n            <button id=\"form_button\" type=\"submit\"><i className=\"fa fa-search fa-lg\" /></button>\n          </form>\n          <div id=\"message\">\n            <p>Search for a pokemon </p>\n          </div>\n        </div>\n\n      )\n    }\n}\n\nexport default Form\n","import { apiBaseURL } from '../global';\nimport React from 'react';\nimport DexSpecificPokemonCard from \"./DexSpecificPokemonCard\";\nimport Form from './Form.js';\nimport { sendGetRequestWithAuthHeader } from \"../global\";\n\n\nclass Dex extends React.Component {\n    state = {\n        dex: [],\n        current: [],\n        errorMessage: \"\",\n    };\n\n    async componentDidMount() {\n        const dexPath = '/v1/pokedex';\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + dexPath);\n        if (response.status == 401) {\n            this.setState({\n              errorMessage: \"Please log in.\"\n            })\n            return;\n        }\n\n        const dex = await response.json();\n  \n        let monInDex = [];\n        for (const pokemonName of Object.keys(dex)) {\n            const caught = dex[pokemonName]\n            if (caught) {\n                const pokemonInfo = await this.getPokemonInDex(pokemonName);\n                pokemonInfo.imageName = pokemonName;\n                monInDex.push(pokemonInfo);\n            }\n        }\n        this.setState({\n            dex: monInDex,\n            current: monInDex\n        })\n    }\n\n\n\n    async getPokemonInDex(pokemonName) {\n        const pokemonPath = '/v1/pokedex/' + pokemonName;\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + pokemonPath);\n        const pokemonInfo = await response.json();\n        return pokemonInfo;\n    }\n\n    filter = (pokemonName) => {\n        let filtered = this.state.dex.filter((pokemon) => {\n\n            return pokemon.name.toLowerCase() === pokemonName.toLowerCase();\n        });\n        \n        this.setState({\n            current: filtered\n        });\n    }\n\n    filterAutoComplete = (pokemonName) => {\n        let filtered = this.state.dex.filter((pokemon) => {\n            return pokemon.name.toLowerCase().startsWith(pokemonName.toLowerCase());\n        });\n        \n        this.setState({\n            current: filtered\n        });\n    }\n\n    filterByDexNumberAutoComplete = (dexNumber) => {\n        let filtered = this.state.dex.filter((pokemon) => {\n            return pokemon.dexNumber.toString().startsWith(dexNumber.toString());\n        });\n        \n        this.setState({\n            current: filtered\n        });\n    }\n\n    reset = () => {\n        this.setState({\n            current: this.state.dex\n        });\n    }\n\n    searchMonInDex = (pokemonName) => {\n        const dexNumber = parseInt(pokemonName);\n        if (!pokemonName || pokemonName == \"\") {\n            this.reset();\n        } else if (!isNaN(dexNumber)) {\n            this.filterByDexNumberAutoComplete(dexNumber);\n        } else {\n            \n            this.filterAutoComplete(pokemonName);\n        }\n    }\n\n    clearErrorMsg = () => {\n        this.setState({\n          errorMessage: \"\"\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <div style={{\"display\": \"flex\", \"justifyContent\": \"center\"}}>\n                    <div style={{\"textAlign\": \"center\", \n                                  \"width\": 50+\"px\", \n                                  \"height\": 50 + \"px\", \n                                  \"lineHeight\": 50 + \"px\",\n                                  \"border\": \"1px solid green\",\n                                  \"borderRadius\": \"10%\",\n                                  \"marginRight\": 5+\"px\"}}>\n                        {this.state.dex.length}\n                    </div>\n                    <Form\n                        placeholderText=\"Search for a pokemon...\"\n                        onSubmit={this.searchMonInDex}\n                    />\n                </div>\n                <hr />\n                {this.state.errorMessage && (\n                    <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n                )}\n\n                <div style={{\"display\": \"flex\", \"flexWrap\": \"wrap\"}}>\n                    {this.state.current.map((pokemon => <DexGeneralPokemonCard filter={this.filter} reset = {this.reset} key={pokemon.name} {...pokemon} />))}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nclass DexGeneralPokemonCard extends React.Component {\n    constructor (props) {\n        super(props)\n        \n        this.state = {\n            general: true\n        }\n    }\n\n    toggleSpecificRender = () => {\n        this.setState({general: !this.state.general})\n    }\n\n    render() {\n        return(\n            this.state.general ? (\n                <div className=\"card\" style={{\"width\": 400+ \"px\", \"paddingTop\": 10+\"px\", \"paddingBottom\": 5+\"px\"}} onClick={() => {\n                    this.toggleSpecificRender();\n                    this.props.filter(this.props.name)\n                }}>\n                    <img src={apiBaseURL + \"/v1/pokedex/image/\" + this.props.imageName} alt={this.props.name + \" image\"} />\n                    <h3>{this.props.name}</h3>\n                    <h4>{\"Dex no. \" + this.props.dexNumber}</h4>\n                </div>\n            ):(\n                <div style={{\"margin\": \"auto\"}} onClick={() => {\n                    this.toggleSpecificRender();\n                    this.props.reset();\n                }}>\n                    <DexSpecificPokemonCard key ={this.props.name} {...this.props}/>    \n                    <button onClick={this.props.reset}>Back</button>        \n                </div>\n            )\n        );\n    }\n}\n\nexport default Dex;","import { apiBaseURL } from '../global';\nimport React from 'react';\nimport { sendGetRequestWithAuthHeader } from \"../global\";\n\nclass Inventory extends React.Component {\n    state = {\n        balls: [],\n        errorMessage: \"\"\n    }\n\n    async componentDidMount() {\n        const inventoryPath = \"/v1/inventory\";\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + inventoryPath);\n        if (response.status == 401) {\n            this.setState({\n              errorMessage: \"Please log in.\"\n            })\n            return;\n        }\n\n        const inventory = await response.json();\n\n        let allBallsInfo = [];\n        for (const ballName of Object.keys(inventory.balls)) {\n            let ballInfo = await this.getBallInfo(ballName);\n            ballInfo.remaining = inventory.balls[ballName];\n            ballInfo.imageName = ballName;\n\n            if (ballInfo) {\n                allBallsInfo.push(ballInfo);\n            }\n        }\n\n        this.setState({\n            balls: allBallsInfo\n        });\n    }\n\n    async getBallInfo(ballName) {\n        const itemPath = \"/v1/items/balls/\" + ballName;\n        const response = await sendGetRequestWithAuthHeader(apiBaseURL + itemPath);\n        return await response.json();\n    }\n\n    render() {\n        return(\n            <div>\n                {this.state.errorMessage && (\n                    <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n                )}\n                <div style={{\"display\": \"flex\", \"flexWrap\": \"wrap\"}}>\n                    {this.state.balls.map((ball => \n                        <Item key={ball.imageName} {...ball} />))}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nclass Item extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n\n    renderItemCard = () => {\n        return(\n            <div className=\"card\" \n            style={{\n                \"padding\": 5 +\"px\",\n                \"width\": 250 + \"px\",\n            }}>\n                <img style = {{\"width\": 150+ \"px\", \"height\": 150 + \"px\"}} \n                     src={apiBaseURL + \"/v1/items/image/\" + this.props.imageName} \n                     alt={this.props.itemName + \" image\"} />\n                <h4>{this.props.itemName}</h4>\n                <p>{this.props.desc}</p>\n                <h4>{\"Remaining: \" + this.props.remaining}</h4>\n            </div>\n        );\n    }\n\n\n    render() {\n        return(\n            this.renderItemCard()\n        );\n    }\n}\n \nexport default Inventory;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./containers/Main\"\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport Team from \"./containers/Team\";\nimport Dex from \"./containers/Dex\";\nimport Inventory from \"./containers/Inventory\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <MainPage />\n      </Route>\n      <Route exact path=\"/login\">\n        <Login />\n      </Route>\n      <Route path=\"/pokedex\">\n        <Dex />\n      </Route>\n      <Route path=\"/team\">\n        <Team />\n      </Route>\n      <Route path=\"/inventory\">\n        <Inventory />\n      </Route>\n      <Route>\n        <NotFound />\n    </Route>\n    </Switch>\n  );\n}\n\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  function handleLogout() {\n    userHasAuthenticated(false);\n  }\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  return (\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\"> Gotta Catch Em All</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullRight>\n          {isAuthenticated\n            ? <NavItem onClick={handleLogout}>Logout</NavItem> \n            : <>\n              <LinkContainer to=\"/inventory\">\n                <NavItem>Inventory</NavItem>\n              </LinkContainer>\n\n              <LinkContainer to=\"/pokedex\">\n                <NavItem>Dex</NavItem>\n              </LinkContainer>\n\n              <LinkContainer to=\"/team\">\n                <NavItem>Team</NavItem>\n              </LinkContainer>\n\n              <LinkContainer to=\"/login\">\n                <NavItem>Login</NavItem>\n              </LinkContainer>\n            </>\n          }             \n\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n       <Routes />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}