{"ast":null,"code":"var _jsxFileName = \"/Users/mac/go/src/github.com/Gottacatchemall/clients/src/Components/Auth/Components/ForgotPassword/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendResetCode = async e => {\n      e.preventDefault();\n      const {\n        email\n      } = this.state;\n      const sendData = {\n        email\n      };\n      const response = await fetch(api.base + api.handlers.resetPasscode, {\n        method: \"POST\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status >= 300) {\n        const error = await response.text();\n        this.setError(error);\n        return;\n      }\n\n      this.setError(\"\");\n      alert(\"A reset code has been sent to your email\");\n      this.setState({\n        resetCodeSent: true\n      });\n    };\n\n    this.updatePassword = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password,\n        passwordConf,\n        resetCode\n      } = this.state;\n      const sendData = {\n        password,\n        passwordConf,\n        resetCode\n      };\n      const response = await fetch(api.base + api.handlers.passwords + email, {\n        method: \"PUT\",\n        body: JSON.stringify(sendData),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n\n      if (response.status >= 300) {\n        const error = await response.text();\n        this.setError(error);\n        return;\n      }\n\n      this.setError(\"\");\n      alert(\"Your password has been updated\");\n    };\n\n    this.setValue = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConf: \"\",\n      resetCode: \"\",\n      resetCodeSent: false,\n      error: \"\"\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      passwordConf,\n      resetCode,\n      resetCodeSent,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Errors, {\n      error: error,\n      setError: this.setError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), resetCodeSent ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.updatePassword(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      onChange: this.setValue,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Password Confirmation: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordConf\",\n      type: \"password\",\n      onChange: this.setValue,\n      value: passwordConf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Reset Code: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"resetCode\",\n      onChange: this.setValue,\n      value: resetCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Update my password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.sendResetCode(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      onChange: this.setValue,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send me a reset code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.props.setPage(e, PageTypes.signIn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Back to sign in\"));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/mac/go/src/github.com/Gottacatchemall/clients/src/Components/Auth/Components/ForgotPassword/ForgotPassword.js"],"names":["React","Component","Errors","api","PageTypes","ForgotPassword","constructor","props","sendResetCode","e","preventDefault","email","state","sendData","response","fetch","base","handlers","resetPasscode","method","body","JSON","stringify","headers","Headers","status","error","text","setError","alert","setState","resetCodeSent","updatePassword","password","passwordConf","resetCode","passwords","setValue","target","name","value","render","setPage","signIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            resetCode: \"\",\n            resetCodeSent: false,\n            error: \"\"\n        }\n    }\n\n    sendResetCode = async (e) => {\n        e.preventDefault();\n        const { email } = this.state;\n        const sendData = { email };\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"A reset code has been sent to your email\");\n        this.setState({ resetCodeSent: true });\n    }\n\n    updatePassword = async (e) => {\n        e.preventDefault();\n        const { email, password, passwordConf, resetCode } = this.state;\n        const sendData = { password, passwordConf, resetCode };\n        const response = await fetch(api.base + api.handlers.passwords + email, {\n            method: \"PUT\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"Your password has been updated\");\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error });\n    }\n\n    render() {\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            {resetCodeSent ?\n                <>\n                    <form onSubmit={(e) => this.updatePassword(e)}>\n                        <div>\n                            <span>Password: </span>\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\n                        </div>\n                        <div>\n                            <span>Password Confirmation: </span>\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\n                        </div>\n                        <div>\n                            <span>Reset Code: </span>\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\n                        </div>\n                        <input type=\"submit\" value=\"Update my password\" />\n                    </form>\n                </>\n                :\n                <>\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\n                        <div>\n                            <span>Email: </span>\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\n                        </div>\n                        <input type=\"submit\" value=\"Send me a reset code\" />\n                    </form>\n                </>}\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\n\n\n        </>\n\n    }\n\n\n\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}