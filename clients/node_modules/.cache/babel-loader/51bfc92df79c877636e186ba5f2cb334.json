{"ast":null,"code":"var _jsxFileName = \"/Users/mac/go/src/github.com/Gottacatchemall/clients/src/Components/Main/Components/UpdateAvatar/UpdateAvatar.js\";\nimport React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nclass UpdateAvatar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendRequest = async e => {\n      e.preventDefault();\n      const {\n        file\n      } = this.state;\n      let data = new FormData();\n      data.append('uploadfile', file);\n      const response = await fetch(api.base + api.handlers.myuserAvatar, {\n        method: \"PUT\",\n        body: data,\n        headers: new Headers({\n          \"Authorization\": localStorage.getItem(\"Authorization\")\n        })\n      });\n\n      if (response.status >= 300) {\n        const error = await response.text();\n        console.log(error);\n        this.setError(error);\n        return;\n      }\n\n      alert(\"Avatar changed\"); // TODO make this better by refactoring errors\n    };\n\n    this.handleFile = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.setError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.state = {\n      file: null,\n      error: ''\n    };\n  }\n\n  render() {\n    const {\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Errors, {\n      error: error,\n      setError: this.setError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Give yourself a new avatar\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.sendRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Upload new avatar \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Change avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default UpdateAvatar;","map":{"version":3,"sources":["/Users/mac/go/src/github.com/Gottacatchemall/clients/src/Components/Main/Components/UpdateAvatar/UpdateAvatar.js"],"names":["React","Component","api","Errors","UpdateAvatar","constructor","props","sendRequest","e","preventDefault","file","state","data","FormData","append","response","fetch","base","handlers","myuserAvatar","method","body","headers","Headers","localStorage","getItem","status","error","text","console","log","setError","alert","handleFile","setState","target","files","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iDAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,WARmB,GAQL,MAAOC,CAAP,IAAa;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,UAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAA0BJ,IAA1B;AACA,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,CAACe,IAAJ,GAAWf,GAAG,CAACgB,QAAJ,CAAaC,YAAzB,EAAuC;AAC/DC,QAAAA,MAAM,EAAE,KADuD;AAE/DC,QAAAA,IAAI,EAAET,IAFyD;AAG/DU,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,2BAAiBC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADA,SAAZ;AAHsD,OAAvC,CAA5B;;AAOA,UAAIV,QAAQ,CAACW,MAAT,IAAmB,GAAvB,EAA4B;AACxB,cAAMC,KAAK,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,aAAKI,QAAL,CAAcJ,KAAd;AACA;AACH;;AACDK,MAAAA,KAAK,CAAC,gBAAD,CAAL,CAlBuB,CAkBE;AAC5B,KA3BkB;;AAAA,SA6BnBC,UA7BmB,GA6BLzB,CAAD,IAAO;AAChB,WAAK0B,QAAL,CAAc;AACVxB,QAAAA,IAAI,EAAEF,CAAC,CAAC2B,MAAF,CAASC,KAAT,CAAe,CAAf;AADI,OAAd;AAGH,KAjCkB;;AAAA,SAmCnBL,QAnCmB,GAmCPJ,KAAD,IAAW;AAClB,WAAKO,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACH,KArCkB;;AAEf,SAAKhB,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,IADG;AAETiB,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAiCDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKhB,KAAvB;AACA,wBAAO,uDACH,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEgB,KAAf;AAAsB,MAAA,QAAQ,EAAE,KAAKI,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFG,eAGH;AAAM,MAAA,QAAQ,EAAE,KAAKxB,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAK0B,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAHG,CAAP;AAWH;;AArDgC;;AAyDrC,eAAe7B,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nclass UpdateAvatar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null,\n            error: ''\n        }\n    }\n\n    sendRequest = async (e) => {\n        e.preventDefault();\n        const { file } = this.state;\n        let data = new FormData()\n        data.append('uploadfile', file);\n        const response = await fetch(api.base + api.handlers.myuserAvatar, {\n            method: \"PUT\",\n            body: data,\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            console.log(error);\n            this.setError(error);\n            return;\n        }\n        alert(\"Avatar changed\"); // TODO make this better by refactoring errors\n    }\n\n    handleFile = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        })\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    render() {\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <div>Give yourself a new avatar</div>\n            <form onSubmit={this.sendRequest}>\n                <div>\n                    <span>Upload new avatar </span>\n                    <input type=\"file\" onChange={this.handleFile} />\n                </div>\n                <input type=\"submit\" value=\"Change avatar\" />\n            </form>\n        </>\n    }\n\n}\n\nexport default UpdateAvatar;"]},"metadata":{},"sourceType":"module"}