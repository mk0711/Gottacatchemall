{"ast":null,"code":"var _jsxFileName = \"/Users/mac/go/src/github.com/Gottacatchemall/clients/src/containers/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from './SignForm';\nimport api from './api';\nimport PageTypes from '../constants/pageType';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setField = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setError = error => {\n      this.setState({\n        error\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      url: \"\",\n      fireRedirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitForm() {\n    this.setState({\n      isBusy: true\n    });\n    let body = JSON.stringify({\n      email: this.state.email,\n      password: this.state.password\n    });\n    fetch(api.sessionurl, {\n      method: \"POST\",\n      body: body,\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        resp.text().then(text => {\n          window.alert('Error ' + resp.status + ' - ' + text);\n        });\n        throw new Error(resp);\n      }\n\n      return resp;\n    }).then(resp => {\n      localStorage.setItem('auth', resp.headers.get('Authorization'));\n      this.setState({\n        url: '/documents',\n        fireRedirect: true\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        error: err\n      });\n    }).then(() => {\n      this.setState({\n        isBusy: false\n      });\n    });\n  }\n\n  render() {\n    const values = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SignForm, {\n      setField: this.setField,\n      submitForm: this.submitForm,\n      values: values,\n      fields: this.fields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.props.setPage(e, PageTypes.signUp),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Sign up instead\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.props.setPage(e, PageTypes.forgotPassword),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Forgot password\"));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/mac/go/src/github.com/Gottacatchemall/clients/src/containers/Login.js"],"names":["React","Component","PropTypes","SignForm","api","PageTypes","SignIn","constructor","props","setField","e","setState","target","name","value","setError","error","state","email","password","url","fireRedirect","handleChange","bind","event","submitForm","isBusy","body","JSON","stringify","fetch","sessionurl","method","headers","Headers","then","resp","ok","text","window","alert","status","Error","localStorage","setItem","get","catch","err","console","log","render","values","fields","setPage","signUp","forgotPassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from './SignForm';\nimport api from './api';\nimport PageTypes from '../constants/pageType';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        email: '',\n        password: '',\n        url: \"\",\n        fireRedirect: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n}\n\nhandleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n}\n\nsetField = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n}\n\nsetError = (error) => {\n    this.setState({ error })\n}\n\nsubmitForm() {\n    this.setState({isBusy: true})\n    let body = JSON.stringify({\n      email: this.state.email, \n      password: this.state.password\n    });\n\n    fetch(api.sessionurl, {\n      method: \"POST\",\n      body: body, \n      headers: new Headers({\n          \"Content-Type\": \"application/json\"\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        resp.text().then(text => {\n            window.alert('Error ' + resp.status + ' - ' + text)\n        })\n        throw new Error(resp)\n    }\n    return resp\n    }).then(resp => {\n      localStorage.setItem('auth', resp.headers.get('Authorization'))\n            this.setState({ url: '/documents', fireRedirect: true })\n        }).catch(err => {\n            console.log(err);\n            this.setState({ error: err });\n        }).then(() => {\n            this.setState({ isBusy: false });\n        });\n    }\n    \n\n    render() {\n        const values = this.state;\n        return <>\n            <SignForm\n                setField={this.setField}\n                submitForm={this.submitForm}\n                values={values}\n                fields={this.fields} />\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signUp)}>Sign up instead</button>\n            <button onClick={(e) => this.props.setPage(e, PageTypes.forgotPassword)}>Forgot password</button>\n        </>\n    }\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}