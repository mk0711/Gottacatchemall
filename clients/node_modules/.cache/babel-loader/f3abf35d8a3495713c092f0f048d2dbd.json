{"ast":null,"code":"var _jsxFileName = \"/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Dex.js\";\nimport { baseURL } from '../global';\nimport React from 'react';\nimport DexPokemonCard from \"./DexPokemonCard\";\n\nclass Dex extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dex: []\n    };\n  }\n\n  async componentDidMount() {\n    const dexPath = '/v1/pokedex';\n    const response = await fetch(baseURL + dexPath);\n    const dex = await response.json();\n    let monInDex = [];\n\n    for (const pokemonName of Object.keys(dex)) {\n      const caught = dex[pokemonName];\n\n      if (caught) {\n        const pokemonInfo = await this.getPokemonInDex(pokemonName);\n        monInDex.push(pokemonInfo);\n      }\n    }\n\n    this.setState({\n      dex: monInDex\n    });\n    console.log(monInDex);\n  }\n\n  async getPokemonInDex(pokemonName) {\n    const pokemonPath = '/v1/pokedex/' + pokemonName;\n    const response = await fetch(baseURL + pokemonPath);\n    const pokemonInfo = await response.json();\n    return pokemonInfo;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, this.state.dex.map(pokemon => /*#__PURE__*/React.createElement(DexPokemonCard, Object.assign({\n      key: pokemon._id\n    }, pokemon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 49\n      }\n    }))));\n  }\n\n}\n\nexport default Dex;","map":{"version":3,"sources":["/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Dex.js"],"names":["baseURL","React","DexPokemonCard","Dex","Component","state","dex","componentDidMount","dexPath","response","fetch","json","monInDex","pokemonName","Object","keys","caught","pokemonInfo","getPokemonInDex","push","setState","console","log","pokemonPath","render","map","pokemon","_id"],"mappings":";AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,GAAG,EAAE;AADD,KADsB;AAAA;;AAK9B,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,OAAO,GAAG,aAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,GAAGQ,OAAX,CAA5B;AACA,UAAMF,GAAG,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAlB;AAEA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,MAAMC,WAAX,IAA0BC,MAAM,CAACC,IAAP,CAAYT,GAAZ,CAA1B,EAA4C;AACxC,YAAMU,MAAM,GAAGV,GAAG,CAACO,WAAD,CAAlB;;AACA,UAAIG,MAAJ,EAAY;AACR,cAAMC,WAAW,GAAG,MAAM,KAAKC,eAAL,CAAqBL,WAArB,CAA1B;AACAD,QAAAA,QAAQ,CAACO,IAAT,CAAcF,WAAd;AACH;AACJ;;AACD,SAAKG,QAAL,CAAc;AACVd,MAAAA,GAAG,EAAEM;AADK,KAAd;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACH;;AAMD,QAAMM,eAAN,CAAsBL,WAAtB,EAAmC;AAC/B,UAAMU,WAAW,GAAG,iBAAiBV,WAArC;AACA,UAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,GAAGuB,WAAX,CAA5B;AACA,UAAMN,WAAW,GAAG,MAAMR,QAAQ,CAACE,IAAT,EAA1B;AACA,WAAOM,WAAP;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWC,GAAX,CAAemB,GAAf,CAAoBC,OAAO,iBAAI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,OAAO,CAACC;AAA7B,OAAsCD,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/B,CADL,CADJ;AAKH;;AAzC6B;;AA4ClC,eAAevB,GAAf","sourcesContent":["import { baseURL } from '../global';\nimport React from 'react';\nimport DexPokemonCard from \"./DexPokemonCard\";\n\nclass Dex extends React.Component {\n    state = {\n        dex: []\n    };\n\n    async componentDidMount() {\n        const dexPath = '/v1/pokedex'\n        const response = await fetch(baseURL + dexPath)\n        const dex = await response.json();\n  \n        let monInDex = [];\n        for (const pokemonName of Object.keys(dex)) {\n            const caught = dex[pokemonName]\n            if (caught) {\n                const pokemonInfo = await this.getPokemonInDex(pokemonName);\n                monInDex.push(pokemonInfo);\n            }\n        }\n        this.setState({\n            dex: monInDex\n        })\n        console.log(monInDex);\n    }\n\n\n\n\n\n    async getPokemonInDex(pokemonName) {\n        const pokemonPath = '/v1/pokedex/' + pokemonName;\n        const response = await fetch(baseURL + pokemonPath);\n        const pokemonInfo = await response.json();\n        return pokemonInfo;\n    }\n\n    render() {\n        return(\n            <div>\n                {this.state.dex.map((pokemon => <DexPokemonCard key={pokemon._id} {...pokemon} />))}\n            </div>\n        );\n    }\n}\n\nexport default Dex;"]},"metadata":{},"sourceType":"module"}