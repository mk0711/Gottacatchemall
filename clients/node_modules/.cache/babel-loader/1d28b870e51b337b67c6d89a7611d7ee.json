{"ast":null,"code":"var _jsxFileName = \"/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Main.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form.js';\nimport Results from './Results.js';\nimport { baseURL } from '../global';\nimport pokemon from './pokemon';\nimport PokemonCard from \"./PokemonCard\";\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.encounter = async () => {\n      const encounterPath = \"/v1/encounter\";\n      const response = await fetch(baseURL + encounterPath);\n      const data = await response.json();\n      this.setState({\n        encountering: {\n          isEncountering: true,\n          pokemonName: data.pokemonName,\n          rarity: data.rarity\n        }\n      });\n      console.log(this.state.encountering);\n    };\n\n    this.runaway = async () => {\n      const runawayPath = \"/v1/runaway\";\n      const response = await fetch(baseURL + runawayPath);\n      const data = await response.text();\n      this.setState({\n        encountering: {\n          isEncountering: false\n        }\n      });\n      console.log(data);\n    };\n\n    this.catch = async () => {\n      console.log(this.state.encountering);\n      const catchPath = \"/v1/catch/\" + this.state.encountering.pokemonName;\n      const response = await fetch(baseURL + catchPath);\n      const data = await response.json();\n\n      if (data.status === \"success\") {\n        this.setState({\n          encountering: {\n            isEncountering: false\n          },\n          caughtPokemon: data.pokemon\n        });\n      }\n\n      console.log(data.pokemon);\n    };\n\n    this.render = () => {\n      let keys = Array.from(this.state.savedPokemon.keys());\n      let i = '';\n      let qrs = [];\n\n      for (i = 0; i < keys.length; i++) {\n        qrs[i] = this.state.savedPokemon.get(keys[i]);\n      }\n\n      const listItems = keys.map((pokemonName, index) => /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: '/pokemonInfo',\n          state: {\n            test: qrs[index]\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, pokemonName)));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        placeholderText: \"Search for a pokemon...\",\n        onSubmit: query => {\n          this.makeApiRequest(query);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }), this.state.pokemon ? /*#__PURE__*/React.createElement(Results, {\n        searchResults: this.state.searchResults,\n        names: this.state.names,\n        one: this.state.one,\n        images: this.state.images,\n        pokemon: this.state.pokemon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, \"Please type in valid pokemon name\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, listItems), !this.state.encountering.isEncountering ? /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.encounter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }, \"Encounter\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.catch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, \"Catch\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.runaway,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, \"Run Away\")), this.state.caughtPokemon && /*#__PURE__*/React.createElement(PokemonCard, Object.assign({}, this.state.caughtPokemon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 44\n        }\n      })));\n    };\n\n    this.state = {\n      searchResults: [],\n      names: [],\n      one: '',\n      // one is just a test variable\n      images: [],\n      pokemon: [],\n      savedPokemon: new Map(),\n      encountering: {\n        isEncountering: false,\n        pokemonName: \"\",\n        rarity: \"\"\n      },\n      caught: false,\n      caughtPokemon: null\n    };\n  }\n\n  async componentDidMount() {\n    const dexPath = '/v1/pokedex';\n    const response = await fetch(baseURL + dexPath);\n    const dex = await response.json();\n    let caughtMon = [];\n\n    for (const pokemonName of Object.keys(dex)) {\n      const caught = dex[pokemonName];\n\n      if (caught) {\n        caughtMon.push(pokemonName);\n      }\n\n      this.setState({\n        caughtMon: caughtMon\n      });\n    }\n  } // makeApiRequest = () => {\n  //   let url =\n  //   let fetchPromise = fetch(url)\n  //   fetchPromise.then((response) => {\n  //     response.json().then((data) => {\n  //       if (response.status === 200 && data.length > 0) { // Hits has something in it\n  //         console.log('response.status', response.status)\n  //         const loop = []\n  //         const loop2 = []\n  //         for (var i = 0; i < data.hits.length; i++) {\n  //           console.log(loop[i])\n  //           loop[i] = data.hits[i].recipe.label\n  //           loop2[i] = data.hits[i].recipe\n  //         }\n  //         this.setState({\n  //           one: data.hits[0].recipe.label,\n  //           names: loop,\n  //           searchResults: data,\n  //           recipes: loop2\n  //         })\n  //       } else {\n  //         this.setState({\n  //           names: null,\n  //           searchResults: null,\n  //           pokemon: null\n  //         })\n  //       }\n  //     })\n  //   })\n  // }\n\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Main.js"],"names":["React","Link","Form","Results","baseURL","pokemon","PokemonCard","MainPage","Component","constructor","props","encounter","encounterPath","response","fetch","data","json","setState","encountering","isEncountering","pokemonName","rarity","console","log","state","runaway","runawayPath","text","catch","catchPath","status","caughtPokemon","render","keys","Array","from","savedPokemon","i","qrs","length","get","listItems","map","index","pathname","test","query","makeApiRequest","searchResults","names","one","images","Map","caught","componentDidMount","dexPath","dex","caughtMon","Object","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Form from './Form.js'\nimport Results from './Results.js'\n\nimport { baseURL } from '../global'\nimport pokemon from './pokemon';\nimport PokemonCard from \"./PokemonCard\";\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            searchResults: [],\n            names: [],\n            one: '', // one is just a test variable\n            images: [],\n            pokemon: [],\n            savedPokemon: new Map(),\n            encountering: {\n              isEncountering: false,\n              pokemonName: \"\",\n              rarity: \"\",\n            },\n            caught: false,\n            caughtPokemon: null\n        }\n    }\n\n    async componentDidMount() {\n      const dexPath = '/v1/pokedex'\n      const response = await fetch(baseURL + dexPath)\n      const dex = await response.json();\n\n      let caughtMon = []\n      for (const pokemonName of Object.keys(dex)) {\n          const caught = dex[pokemonName]\n          if (caught) {\n              caughtMon.push(pokemonName)\n          }\n          this.setState({ caughtMon: caughtMon })\n      }\n    }\n\n    encounter = async () => {\n      const encounterPath = \"/v1/encounter\";\n      const response = await fetch(baseURL + encounterPath);\n      const data = await response.json();\n\n      this.setState({encountering: {\n        isEncountering: true,\n        pokemonName: data.pokemonName,\n        rarity: data.rarity,\n      }})\n\n      console.log(this.state.encountering);\n    }\n\n    runaway = async () => {\n      const runawayPath = \"/v1/runaway\";\n      const response = await fetch(baseURL + runawayPath);\n      const data = await response.text();\n\n      this.setState({encountering: {\n        isEncountering: false\n      }})\n      console.log(data);\n    }\n\n    catch = async () => {\n      console.log(this.state.encountering);\n      const catchPath = \"/v1/catch/\" + this.state.encountering.pokemonName;\n      const response = await fetch(baseURL + catchPath);\n      const data = await response.json();\n\n      if (data.status === \"success\") {\n        this.setState({\n          encountering: {\n            isEncountering: false\n          },\n          caughtPokemon: data.pokemon\n        });\n      } \n      console.log(data.pokemon);\n    }\n\n    render = () => {\n        let keys = Array.from(this.state.savedPokemon.keys())\n        let i = ''\n        let qrs = []\n        for (i = 0; i < keys.length; i++) {\n            qrs[i] = this.state.savedPokemon.get(keys[i])\n        }\n\n        const listItems = keys.map((pokemonName, index) => (\n            <Link\n                to={{\n                    pathname: '/pokemonInfo',\n                    state: {\n                        test: qrs[index],\n                    },\n                }}\n            >\n                <li>{pokemonName}</li>\n            </Link>\n        ))\n\n        return (\n            <div>\n                <Form\n                    placeholderText=\"Search for a pokemon...\"\n                    onSubmit={(query) => {\n                        this.makeApiRequest(query)\n                    }}\n                />\n                <br></br>\n                <hr />\n\n                {this.state.pokemon ? (\n                    <Results\n                        searchResults={this.state.searchResults}\n                        names={this.state.names}\n                        one={this.state.one}\n                        images={this.state.images}\n                        pokemon={this.state.pokemon}\n                    />\n                ) : (\n                    <p>Please type in valid pokemon name</p>\n                )}\n\n                <ul>{listItems}</ul>\n                {!this.state.encountering.isEncountering ? (\n                  <button onClick={this.encounter}>\n                    Encounter\n                  </button>\n\n                ) : (\n                  <div>\n                    <button onClick={this.catch}>\n                      Catch\n                    </button>\n                    <button onClick={this.runaway}>  \n                      Run Away\n                    </button>\n                  </div>\n                )}\n              {this.state.caughtPokemon && <PokemonCard {...this.state.caughtPokemon} />}\n            </div>\n        )\n    }\n\n    // makeApiRequest = () => {\n    //   let url =\n    //   let fetchPromise = fetch(url)\n    //   fetchPromise.then((response) => {\n    //     response.json().then((data) => {\n    //       if (response.status === 200 && data.length > 0) { // Hits has something in it\n    //         console.log('response.status', response.status)\n\n    //         const loop = []\n    //         const loop2 = []\n\n    //         for (var i = 0; i < data.hits.length; i++) {\n    //           console.log(loop[i])\n    //           loop[i] = data.hits[i].recipe.label\n    //           loop2[i] = data.hits[i].recipe\n    //         }\n\n    //         this.setState({\n    //           one: data.hits[0].recipe.label,\n    //           names: loop,\n    //           searchResults: data,\n    //           recipes: loop2\n    //         })\n    //       } else {\n    //         this.setState({\n    //           names: null,\n    //           searchResults: null,\n    //           pokemon: null\n    //         })\n    //       }\n    //     })\n    //   })\n    // }\n}\n\nexport default MainPage\n"]},"metadata":{},"sourceType":"module"}