{"ast":null,"code":"var _jsxFileName = \"/Users/mac/go/src/github.com/Gottacatchemall/clients/src/containers/Login.js\";\nimport React, { Component } from \"react\";\nimport Auth from \"./auth\"; //import Error from \"./NotFound\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      errorMessage: \"\"\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleError = this.handleError.bind(this);\n  } // Add a handleSignUp() method\n\n\n  handleSignUp(email, password, passwordconf, username, firstname, lastname) {\n    this.removeError();\n    let values = {\n      email: email,\n      password: password,\n      passwordConf: passwordconf,\n      userName: username,\n      firstName: firstname,\n      lastName: lastname\n    };\n    let json = JSON.stringify(values);\n    let dataURL = \"https://api.mtothekay.me/v1/users\";\n    let request = {\n      method: \"POST\",\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(dataURL, request).then(this.setAuthHeader).then(this.parseAsJSON).then(newUser => this.setState({\n      user: newUser\n    })).catch(this.handleError);\n  }\n\n  setAuthHeader(response) {\n    localStorage.setItem(\"authHeader\", response.headers.get(\"Authorization\"));\n    return response;\n  }\n\n  parseAsJSON(response) {\n    if (response.status < 300) {\n      return response.json();\n    }\n\n    return response.text().then(err => {\n      throw err;\n    });\n  }\n\n  handleError(err) {\n    this.setState({\n      errorMessage: err\n    });\n  }\n\n  removeError() {\n    this.setState({\n      errorMessage: null\n    });\n  }\n\n  handleSignIn(email, password) {\n    this.removeError();\n    let obj = {\n      email: email,\n      password: password\n    };\n    let json = JSON.stringify(obj);\n    let dataURL = \"https://api.mtothekay.me/v1/sessions\";\n    let request = {\n      method: \"POST\",\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(dataURL, request).then(this.setAuthHeader).then(this.parseAsJSON).then(user => this.setState({\n      user: user\n    })).catch(this.handleError);\n  }\n\n  handleSignOut() {\n    this.removeError();\n    let dataURL = \"https://api.mtothekay.me/v1/sessions/mine\";\n    let request = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: localStorage.getItem(\"authHeader\")\n      }\n    };\n    fetch(dataURL, request).then(response => {\n      console.log(response.status);\n\n      if (response.ok) {\n        return response;\n      }\n\n      return response.text().then(err => {\n        throw err;\n      });\n    }).then(response => {\n      localStorage.clear();\n      this.setState({\n        user: null\n      });\n      return response;\n    }).catch(this.handleError);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      errorMessage: this.state.errorMessage,\n      user: this.state.user,\n      handleSignUp: this.handleSignUp,\n      handleSignIn: this.handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/mac/go/src/github.com/Gottacatchemall/clients/src/containers/Login.js"],"names":["React","Component","Auth","Login","constructor","props","state","user","errorMessage","handleSignUp","bind","handleSignOut","handleSignIn","handleError","email","password","passwordconf","username","firstname","lastname","removeError","values","passwordConf","userName","firstName","lastName","json","JSON","stringify","dataURL","request","method","body","headers","fetch","then","setAuthHeader","parseAsJSON","newUser","setState","catch","response","localStorage","setItem","get","status","text","err","obj","Authorization","getItem","console","log","ok","clear","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Auth from \"./auth\";\n//import Error from \"./NotFound\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      errorMessage: \"\"\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  // Add a handleSignUp() method\n  handleSignUp(email, password, passwordconf, username, firstname, lastname) {\n    this.removeError();\n    let values = {\n      email: email,\n      password: password,\n      passwordConf: passwordconf,\n      userName: username,\n      firstName: firstname,\n      lastName: lastname\n    };\n\n    let json = JSON.stringify(values);\n    let dataURL = \"https://api.mtothekay.me/v1/users\";\n    let request = {\n      method: \"POST\",\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(dataURL, request)\n      .then(this.setAuthHeader)\n      .then(this.parseAsJSON)\n      .then(newUser => this.setState({ user: newUser }))\n      .catch(this.handleError);\n  }\n\n  setAuthHeader(response) {\n    localStorage.setItem(\"authHeader\", response.headers.get(\"Authorization\"));\n    return response;\n  }\n\n  parseAsJSON(response) {\n    if (response.status < 300) {\n      return response.json();\n    }\n    return response.text().then(err => {\n      throw err;\n    });\n  }\n\n  handleError(err) {\n    this.setState({ errorMessage: err });\n  }\n\n  removeError() {\n    this.setState({ errorMessage: null });\n  }\n\n  handleSignIn(email, password) {\n    this.removeError();\n    let obj = {\n      email: email,\n      password: password\n    };\n\n    let json = JSON.stringify(obj);\n    let dataURL = \"https://api.mtothekay.me/v1/sessions\";\n    let request = {\n      method: \"POST\",\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(dataURL, request)\n      .then(this.setAuthHeader)\n      .then(this.parseAsJSON)\n      .then(user => this.setState({ user: user }))\n      .catch(this.handleError);\n  }\n\n  handleSignOut() {\n    this.removeError();\n    let dataURL = \"https://api.mtothekay.me/v1/sessions/mine\";\n    let request = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: localStorage.getItem(\"authHeader\")\n      }\n    };\n\n    fetch(dataURL, request)\n      .then(response => {\n        console.log(response.status);\n        if (response.ok) {\n          return response;\n        }\n        return response.text().then(err => {\n          throw err;\n        });\n      })\n      .then(response => {\n        localStorage.clear();\n        this.setState({ user: null });\n        return response;\n      })\n      .catch(this.handleError);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n          <Auth\n            errorMessage={this.state.errorMessage}\n            user={this.state.user}\n            handleSignUp={this.handleSignUp}\n            handleSignIn={this.handleSignIn}\n          />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}