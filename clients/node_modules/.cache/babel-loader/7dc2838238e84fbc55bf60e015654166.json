{"ast":null,"code":"var _jsxFileName = \"/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Main.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form.js';\nimport Results from './Results.js';\nimport { baseURL } from '../global';\nimport pokemon from \"./pokemon\";\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      let keys = Array.from(this.state.savedPokemon.keys());\n      let i = '';\n      let qrs = [];\n\n      for (i = 0; i < keys.length; i++) {\n        qrs[i] = this.state.savedPokemon.get(keys[i]);\n      }\n\n      const listItems = keys.map((pokemonName, index) => /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: '/pokemonInfo',\n          state: {\n            test: qrs[index]\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, pokemonName)));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        placeholderText: \"Search for a pokemon...\",\n        onSubmit: query => {\n          this.makeApiRequest(query);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), this.state.pokemon ? /*#__PURE__*/React.createElement(Results, {\n        searchResults: this.state.searchResults,\n        names: this.state.names,\n        one: this.state.one,\n        images: this.state.images,\n        pokemon: this.state.pokemon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, \"Please type in valid pokemon name\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, listItems));\n    };\n\n    this.state = {\n      searchResults: [],\n      names: [],\n      one: '',\n      // one is just a test variable\n      images: [],\n      pokemon: [],\n      savedPokemon: new Map(),\n      caughtMon: []\n    };\n  }\n\n  async componentDidMount() {\n    const dexPath = \"/v1/pokedex\";\n    const response = await fetch(baseURL + dexPath);\n    const dex = await response.json();\n    let caughtMon = [];\n\n    for (const pokemonName of Object.keys(dex)) {\n      const caught = dex[pokemonName];\n\n      if (caught) {\n        caughtMon.push(pokemonName);\n      }\n\n      this.setState({\n        caughtMon: caughtMon\n      });\n    }\n  } // makeApiRequest = () => {\n  //   let url =\n  //   let fetchPromise = fetch(url)\n  //   fetchPromise.then((response) => {\n  //     response.json().then((data) => {\n  //       if (response.status === 200 && data.length > 0) { // Hits has something in it\n  //         console.log('response.status', response.status)\n  //         const loop = []\n  //         const loop2 = []\n  //         for (var i = 0; i < data.hits.length; i++) {\n  //           console.log(loop[i])\n  //           loop[i] = data.hits[i].recipe.label\n  //           loop2[i] = data.hits[i].recipe\n  //         }\n  //         this.setState({\n  //           one: data.hits[0].recipe.label,\n  //           names: loop,\n  //           searchResults: data,\n  //           recipes: loop2\n  //         })\n  //       } else {\n  //         this.setState({\n  //           names: null,\n  //           searchResults: null,\n  //           pokemon: null\n  //         })\n  //       }\n  //     })\n  //   })\n  // }\n\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Main.js"],"names":["React","Link","Form","Results","baseURL","pokemon","MainPage","Component","constructor","props","render","keys","Array","from","state","savedPokemon","i","qrs","length","get","listItems","map","pokemonName","index","pathname","test","query","makeApiRequest","searchResults","names","one","images","Map","caughtMon","componentDidMount","dexPath","response","fetch","dex","json","Object","caught","push","setState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Form from './Form.js'\nimport Results from './Results.js'\n\nimport { baseURL } from '../global';\nimport pokemon from \"./pokemon\";\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            searchResults: [],\n            names: [],\n            one: '', // one is just a test variable\n            images: [],\n            pokemon: [],\n            savedPokemon: new Map(),\n            caughtMon: []\n        }\n    }\n\n    async componentDidMount() {\n      const dexPath = \"/v1/pokedex\";\n      const response = await fetch(baseURL + dexPath);\n      const dex = await response.json();\n\n      let caughtMon = [];\n      for (const pokemonName of Object.keys(dex)) {\n        const caught = dex[pokemonName];\n        if (caught) {\n          caughtMon.push(pokemonName);\n        }\n        this.setState({caughtMon: caughtMon});\n      }\n    }\n\n    render = () => {\n        let keys = Array.from(this.state.savedPokemon.keys())\n        let i = ''\n        let qrs = []\n        for (i = 0; i < keys.length; i++) {\n            qrs[i] = this.state.savedPokemon.get(keys[i])\n        }\n\n        const listItems = keys.map((pokemonName, index) => (\n            <Link\n                to={{\n                    pathname: '/pokemonInfo',\n                    state: {\n                        test: qrs[index],\n                    },\n                }}\n            >\n                <li>{pokemonName}</li>\n            </Link>\n        ));\n\n        return (\n            <div>\n              <div></div>\n                <Form\n                    placeholderText=\"Search for a pokemon...\"\n                    onSubmit={(query) => {\n                        this.makeApiRequest(query)\n                    }}\n                />\n                <br></br>\n                <hr />\n\n                {this.state.pokemon ? (\n                    <Results\n                        searchResults={this.state.searchResults}\n                        names={this.state.names}\n                        one={this.state.one}\n                        images={this.state.images}\n                        pokemon={this.state.pokemon}\n                    />\n                ) : (\n                    <p>Please type in valid pokemon name</p>\n                )}\n\n                <ul>{listItems}</ul>\n            </div>\n        )\n    }\n\n    // makeApiRequest = () => {\n    //   let url =\n    //   let fetchPromise = fetch(url)\n    //   fetchPromise.then((response) => {\n    //     response.json().then((data) => {\n    //       if (response.status === 200 && data.length > 0) { // Hits has something in it\n    //         console.log('response.status', response.status)\n\n    //         const loop = []\n    //         const loop2 = []\n\n    //         for (var i = 0; i < data.hits.length; i++) {\n    //           console.log(loop[i])\n    //           loop[i] = data.hits[i].recipe.label\n    //           loop2[i] = data.hits[i].recipe\n    //         }\n\n    //         this.setState({\n    //           one: data.hits[0].recipe.label,\n    //           names: loop,\n    //           searchResults: data,\n    //           recipes: loop2\n    //         })\n    //       } else {\n    //         this.setState({\n    //           names: null,\n    //           searchResults: null,\n    //           pokemon: null\n    //         })\n    //       }\n    //     })\n    //   })\n    // }\n}\n\nexport default MainPage\n"]},"metadata":{},"sourceType":"module"}