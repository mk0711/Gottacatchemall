{"ast":null,"code":"var _jsxFileName = \"/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Dex.js\";\nimport { baseURL } from '../global';\nimport React from 'react';\nimport DexSpecificPokemonCard from \"./DexSpecificPokemonCard\";\nimport { Link } from 'react-router-dom';\nimport Form from './Form.js';\nimport Results from './Results.js';\n\nclass Dex extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dex: [],\n      current: []\n    };\n\n    this.filter = pokemonName => {\n      let filtered = this.state.dex.filter(pokemon => {\n        return pokemon.name.toLowerCase() === pokemonName.toLowerCase();\n      });\n      this.setState({\n        current: filtered\n      });\n    };\n\n    this.filterAutoComplete = pokemonName => {\n      let filtered = this.state.dex.filter(pokemon => {\n        return pokemon.name.toLowerCase().startsWith(pokemonName.toLowerCase());\n      });\n      this.setState({\n        current: filtered\n      });\n    };\n\n    this.filterByDexNumberAutoComplete = dexNumber => {\n      let filtered = this.state.dex.filter(pokemon => {\n        return pokemon.name.toLowerCase().startsWith(dexNumber.toString());\n      });\n      this.setState({\n        current: filtered\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        current: this.state.dex\n      });\n    };\n\n    this.searchMonInDex = pokemonName => {\n      const isNumber = parseInt(pokemonName) !== NaN;\n\n      if (isNumber) {\n        console.log(\"here\");\n      }\n\n      if (!pokemonName || pokemonName == \"\") {\n        this.reset();\n      } else {\n        this.filterAutoComplete(pokemonName);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const dexPath = '/v1/pokedex';\n    const response = await fetch(baseURL + dexPath);\n    const dex = await response.json();\n    let monInDex = [];\n\n    for (const pokemonName of Object.keys(dex)) {\n      const caught = dex[pokemonName];\n\n      if (caught) {\n        const pokemonInfo = await this.getPokemonInDex(pokemonName);\n        pokemonInfo.imageName = pokemonName;\n        monInDex.push(pokemonInfo);\n      }\n    }\n\n    this.setState({\n      dex: monInDex,\n      current: monInDex\n    });\n  }\n\n  async getPokemonInDex(pokemonName) {\n    const pokemonPath = '/v1/pokedex/' + pokemonName;\n    const response = await fetch(baseURL + pokemonPath);\n    const pokemonInfo = await response.json();\n    return pokemonInfo;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      placeholderText: \"Search for a pokemon...\",\n      onSubmit: this.searchMonInDex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), this.state.pokemon ? /*#__PURE__*/React.createElement(Results, {\n      searchResults: this.state.searchResults,\n      names: this.state.names,\n      one: this.state.one,\n      images: this.state.images,\n      pokemon: this.state.pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Please type in valid pokemon name\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": \"flex\",\n        \"flexWrap\": \"wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, this.state.current.map(pokemon => /*#__PURE__*/React.createElement(DexGeneralPokemonCard, Object.assign({\n      filter: this.filter,\n      reset: this.reset,\n      key: pokemon.name\n    }, pokemon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 57\n      }\n    })))));\n  }\n\n}\n\nclass DexGeneralPokemonCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleSpecificRender = () => {\n      this.setState({\n        general: !this.state.general\n      });\n    };\n\n    this.state = {\n      general: true\n    };\n  }\n\n  render() {\n    return this.state.general ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        \"width\": 400 + \"px\",\n        \"paddingTop\": 10 + \"px\",\n        \"paddingBottom\": 5 + \"px\"\n      },\n      onClick: () => {\n        this.toggleSpecificRender();\n        this.props.filter(this.props.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: baseURL + \"/v1/pokedex/image/\" + this.props.imageName,\n      alt: this.props.name + \" image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Dex no. \" + this.props.dexNumber)) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"margin\": \"auto\"\n      },\n      onClick: () => {\n        this.toggleSpecificRender();\n        this.props.reset();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DexSpecificPokemonCard, Object.assign({\n      key: this.props.name\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Back\"));\n  }\n\n}\n\nexport default Dex;","map":{"version":3,"sources":["/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Dex.js"],"names":["baseURL","React","DexSpecificPokemonCard","Link","Form","Results","Dex","Component","state","dex","current","filter","pokemonName","filtered","pokemon","name","toLowerCase","setState","filterAutoComplete","startsWith","filterByDexNumberAutoComplete","dexNumber","toString","reset","searchMonInDex","isNumber","parseInt","NaN","console","log","componentDidMount","dexPath","response","fetch","json","monInDex","Object","keys","caught","pokemonInfo","getPokemonInDex","imageName","push","pokemonPath","render","searchResults","names","one","images","map","DexGeneralPokemonCard","constructor","props","toggleSpecificRender","general"],"mappings":"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","sourcesContent":["import { baseURL } from '../global';\nimport React from 'react';\nimport DexSpecificPokemonCard from \"./DexSpecificPokemonCard\";\nimport { Link } from 'react-router-dom';\nimport Form from './Form.js';\nimport Results from './Results.js';\n\n\nclass Dex extends React.Component {\n    state = {\n        dex: [],\n        current: [],\n    };\n\n    async componentDidMount() {\n        const dexPath = '/v1/pokedex'\n        const response = await fetch(baseURL + dexPath)\n        const dex = await response.json();\n  \n        let monInDex = [];\n        for (const pokemonName of Object.keys(dex)) {\n            const caught = dex[pokemonName]\n            if (caught) {\n                const pokemonInfo = await this.getPokemonInDex(pokemonName);\n                pokemonInfo.imageName = pokemonName;\n                monInDex.push(pokemonInfo);\n            }\n        }\n        this.setState({\n            dex: monInDex,\n            current: monInDex\n        })\n    }\n\n\n\n    async getPokemonInDex(pokemonName) {\n        const pokemonPath = '/v1/pokedex/' + pokemonName;\n        const response = await fetch(baseURL + pokemonPath);\n        const pokemonInfo = await response.json();\n        return pokemonInfo;\n    }\n\n    filter = (pokemonName) => {\n        let filtered = this.state.dex.filter((pokemon) => {\n\n            return pokemon.name.toLowerCase() === pokemonName.toLowerCase();\n        });\n        \n        this.setState({\n            current: filtered\n        });\n    }\n\n    filterAutoComplete = (pokemonName) => {\n        let filtered = this.state.dex.filter((pokemon) => {\n            return pokemon.name.toLowerCase().startsWith(pokemonName.toLowerCase());\n        });\n        \n        this.setState({\n            current: filtered\n        });\n    }\n\n    filterByDexNumberAutoComplete = (dexNumber) => {\n        let filtered = this.state.dex.filter((pokemon) => {\n            return pokemon.name.toLowerCase().startsWith(dexNumber.toString());\n        });\n        \n        this.setState({\n            current: filtered\n        });\n    }\n\n    reset = () => {\n        this.setState({\n            current: this.state.dex\n        });\n    }\n\n    searchMonInDex = (pokemonName) => {\n        const isNumber = parseInt(pokemonName) !== NaN;\n        if (isNumber) {\n            console.log(\"here\")\n\n        }\n        if (!pokemonName || pokemonName == \"\") {\n            this.reset();\n        } else {\n            this.filterAutoComplete(pokemonName);\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Form\n                    placeholderText=\"Search for a pokemon...\"\n                    onSubmit={this.searchMonInDex}\n                />\n                <br></br>\n                <hr />\n\n                {this.state.pokemon ? (\n                    <Results\n                        searchResults={this.state.searchResults}\n                        names={this.state.names}\n                        one={this.state.one}\n                        images={this.state.images}\n                        pokemon={this.state.pokemon}\n                    />\n                ) : (\n                    <p>Please type in valid pokemon name</p>\n                )}\n\n                <div style={{\"display\": \"flex\", \"flexWrap\": \"wrap\"}}>\n                    {this.state.current.map((pokemon => <DexGeneralPokemonCard filter={this.filter} reset = {this.reset} key={pokemon.name} {...pokemon} />))}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nclass DexGeneralPokemonCard extends React.Component {\n    constructor (props) {\n        super(props)\n        \n        this.state = {\n            general: true\n        }\n    }\n\n    toggleSpecificRender = () => {\n        this.setState({general: !this.state.general})\n    }\n\n    render() {\n        return(\n            this.state.general ? (\n                <div className=\"card\" style={{\"width\": 400+ \"px\", \"paddingTop\": 10+\"px\", \"paddingBottom\": 5+\"px\"}} onClick={() => {\n                    this.toggleSpecificRender();\n                    this.props.filter(this.props.name)\n                }}>\n                    <img src={baseURL + \"/v1/pokedex/image/\" + this.props.imageName} alt={this.props.name + \" image\"} />\n                    <h3>{this.props.name}</h3>\n                    <h4>{\"Dex no. \" + this.props.dexNumber}</h4>\n                </div>\n            ):(\n                <div style={{\"margin\": \"auto\"}} onClick={() => {\n                    this.toggleSpecificRender();\n                    this.props.reset();\n                }}>\n                    <DexSpecificPokemonCard key ={this.props.name} {...this.props}/>    \n                    <button onClick={this.props.reset}>Back</button>        \n                </div>\n            )\n        );\n    }\n}\n\nexport default Dex;"]},"metadata":{},"sourceType":"module"}