{"ast":null,"code":"var _jsxFileName = \"/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Inventory.js\";\nimport { baseURL } from '../global';\nimport React from 'react';\n\nclass BallInventory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balls: []\n    };\n  }\n\n  async componentDidMount() {\n    const inventoryPath = \"/v1/inventory\";\n    const response = await fetch(baseURL + inventoryPath);\n    const inventory = await response.json();\n    let allBallsInfo = [];\n\n    for (const ballName of Object.keys(inventory.balls)) {\n      let ballInfo = await this.getBallInfo(ballName);\n      ballInfo.remaining = inventory.balls[ballName];\n      ballInfo.imageName = ballName;\n\n      if (ballInfo) {\n        allBallsInfo.push(ballInfo);\n      }\n    }\n\n    this.setState({\n      balls: allBallsInfo\n    });\n  }\n\n  async getBallInfo(ballName) {\n    const itemPath = \"/v1/items/balls/\" + ballName;\n    const response = await fetch(baseURL + itemPath);\n    return await response.json();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": \"flex\",\n        \"flexWrap\": \"wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, this.state.balls.map(ball => /*#__PURE__*/React.createElement(Item, Object.assign({\n      selectSpecificBall: this.props.selectSpecificBall,\n      selected: this.props.selected,\n      key: ball.imageName\n    }, ball, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderItemCard = () => {\n      const selected = this.props.selected === this.props.imageName;\n      const border = selected ? \"2px solid black\" : \"\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          \"border\": {\n            border\n          }\n        },\n        onClick: () => {\n          this.props.selectSpecificBall(this.props.imageName);\n        },\n        style: {\n          \"padding\": 5 + \"px\",\n          \"width\": 250 + \"px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          \"width\": 150 + \"px\",\n          \"height\": 150 + \"px\"\n        },\n        src: baseURL + \"/v1/items/image/\" + this.props.imageName,\n        alt: this.props.itemName + \" image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, this.props.itemName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, this.props.desc), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Remaining: \" + this.props.remaining));\n    };\n  }\n\n  render() {\n    return this.renderItemCard();\n  }\n\n}\n\nexport default BallInventory;","map":{"version":3,"sources":["/Users/npham24/go/src/Gottacatchemall/clients/src/containers/Inventory.js"],"names":["baseURL","React","BallInventory","Component","state","balls","componentDidMount","inventoryPath","response","fetch","inventory","json","allBallsInfo","ballName","Object","keys","ballInfo","getBallInfo","remaining","imageName","push","setState","itemPath","render","map","ball","props","selectSpecificBall","selected","Item","constructor","renderItemCard","border","itemName","desc"],"mappings":"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","sourcesContent":["import { baseURL } from '../global';\nimport React from 'react';\n\nclass BallInventory extends React.Component {\n    state = {\n        balls: []\n    }\n\n    async componentDidMount() {\n        const inventoryPath = \"/v1/inventory\";\n        const response = await fetch(baseURL + inventoryPath);\n        const inventory = await response.json();\n\n        let allBallsInfo = [];\n        for (const ballName of Object.keys(inventory.balls)) {\n            let ballInfo = await this.getBallInfo(ballName);\n            ballInfo.remaining = inventory.balls[ballName];\n            ballInfo.imageName = ballName;\n\n            if (ballInfo) {\n                allBallsInfo.push(ballInfo);\n            }\n        }\n\n        this.setState({\n            balls: allBallsInfo\n        });\n    }\n\n    async getBallInfo(ballName) {\n        const itemPath = \"/v1/items/balls/\" + ballName;\n        const response = await fetch(baseURL + itemPath);\n        return await response.json();\n    }\n\n    render() {\n        return(\n            <div style={{\"display\": \"flex\", \"flexWrap\": \"wrap\"}}>\n                {this.state.balls.map((ball => \n                    <Item selectSpecificBall={this.props.selectSpecificBall} \n                          selected ={this.props.selected}\n                          key={ball.imageName} \n                          {...ball} />))}\n            </div>\n        );\n    }\n}\n\nclass Item extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n\n    renderItemCard = () => {\n\n        const selected = this.props.selected === this.props.imageName;\n        const border = selected ? \"2px solid black\": \"\"\n        return(\n            <div className=\"card\" \n            style={{\n                \"border\": {border}\n            }}\n            onClick={() => {\n                this.props.selectSpecificBall(this.props.imageName)\n            }}\n            style={{\n                \"padding\": 5 +\"px\",\n                \"width\": 250 + \"px\"\n            }}>\n                <img style = {{\"width\": 150+ \"px\", \"height\": 150 + \"px\"}} \n                     src={baseURL + \"/v1/items/image/\" + this.props.imageName} \n                     alt={this.props.itemName + \" image\"} />\n                <h4>{this.props.itemName}</h4>\n                <p>{this.props.desc}</p>\n                <h4>{\"Remaining: \" + this.props.remaining}</h4>\n            </div>\n        );\n    }\n\n\n    render() {\n        return(\n            this.renderItemCard()\n        );\n    }\n}\n \nexport default BallInventory;"]},"metadata":{},"sourceType":"module"}