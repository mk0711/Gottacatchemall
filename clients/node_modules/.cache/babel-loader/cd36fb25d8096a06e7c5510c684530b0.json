{"ast":null,"code":"var _jsxFileName = \"/Users/mac/go/src/github.com/Gottacatchemall/clients/src/containers/Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport * as api from './api.js';\nimport { Button, FormGroup, TextField, Typography, FormControl, ControlLabel } from \"react-bootstrap\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      url: \"\",\n      fireRedirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitCredentials() {\n    this.setState({\n      isBusy: true\n    });\n    let body = JSON.stringify({\n      email: this.state.email,\n      password: this.state.password\n    });\n    fetch(api.sessionurl, {\n      method: 'POST',\n      body: body,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => {\n      if (!resp.ok) {\n        resp.text().then(text => {\n          window.alert('Error ' + resp.status + ' - ' + text);\n        });\n        throw new Error(resp);\n      }\n\n      return resp;\n    }).then(resp => {\n      localStorage.setItem('auth', resp.headers.get('Authorization'));\n      this.setState({\n        url: '/documents',\n        fireRedirect: true\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        error: err\n      });\n    }).then(() => {\n      this.setState({\n        isBusy: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      fireRedirect\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.classes.divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      varient: \"display2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      className: this.props.classes.TextField,\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      className: this.props.classes.TextField,\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: this.state.isBusy,\n      className: this.props.classes.submitButton,\n      onClick: () => this.submitCredentials(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Submit\"), fireRedirect && /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 39\n      }\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/mac/go/src/github.com/Gottacatchemall/clients/src/containers/Login.js"],"names":["React","Component","Redirect","api","Button","FormGroup","TextField","Typography","FormControl","ControlLabel","Login","constructor","props","state","email","password","url","fireRedirect","handleChange","bind","event","setState","target","name","value","submitCredentials","isBusy","body","JSON","stringify","fetch","sessionurl","method","headers","then","resp","ok","text","window","alert","status","Error","localStorage","setItem","get","catch","err","console","log","error","render","classes","divStyle","submitButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport * as api from './api.js';\nimport { Button, FormGroup, TextField, Typography, FormControl, ControlLabel } from \"react-bootstrap\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: '',\n            url: \"\",\n            fireRedirect: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    submitCredentials() {\n        this.setState({ isBusy: true })\n        let body = JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n        });\n        fetch(api.sessionurl, {\n            method: 'POST',\n            body: body,\n            headers: { 'Content-Type': 'application/json' }\n        }).then(resp => {\n            if (!resp.ok) {\n                resp.text().then(text => {\n                    window.alert('Error ' + resp.status + ' - ' + text)\n                })\n                throw new Error(resp)\n            }\n            return resp\n        }).then(resp => {\n            localStorage.setItem('auth', resp.headers.get('Authorization'))\n            this.setState({ url: '/documents', fireRedirect: true })\n        }).catch(err => {\n            console.log(err);\n            this.setState({ error: err });\n        }).then(() => {\n            this.setState({ isBusy: false });\n        });\n    }\n\n    render() {\n        const { fireRedirect } = this.state\n\n        return (\n            <div>\n                <div className={this.props.classes.divStyle}>\n                    <Form varient=\"display2\" gutterBottom>\n                        Login\n                </Form>\n                    <TextField\n                        required\n                        type=\"email\"\n                        name=\"email\"\n                        label=\"Email\"\n                        className={this.props.classes.TextField}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                    <TextField\n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        label=\"Password\"\n                        className={this.props.classes.TextField}\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={this.state.isBusy}\n                        className={this.props.classes.submitButton}\n                        onClick={() => this.submitCredentials()}\n                    >Submit</Button>\n                    {fireRedirect && (<Redirect to={this.state.url}></Redirect>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}